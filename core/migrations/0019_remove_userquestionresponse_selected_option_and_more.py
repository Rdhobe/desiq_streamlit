# Generated by Django 5.1.3 on 2025-05-10 13:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0018_scenarioquestion_sequentialscenario_questionoption_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='userquestionresponse',
            name='selected_option',
        ),
        migrations.RemoveField(
            model_name='scenarioquestion',
            name='scenario',
        ),
        migrations.RemoveField(
            model_name='userquestionresponse',
            name='question',
        ),
        migrations.RemoveField(
            model_name='userscenariosession',
            name='current_question',
        ),
        migrations.RemoveField(
            model_name='scenarioreport',
            name='session',
        ),
        migrations.RemoveField(
            model_name='userscenariosession',
            name='scenario',
        ),
        migrations.RemoveField(
            model_name='userquestionresponse',
            name='session',
        ),
        migrations.RemoveField(
            model_name='userscenariosession',
            name='user',
        ),
        migrations.CreateModel(
            name='DynamicScenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('career', 'Career Decisions'), ('finance', 'Financial Decisions'), ('relationships', 'Relationship Decisions'), ('time_management', 'Time Management'), ('education', 'Educational Decisions'), ('health', 'Health & Wellness'), ('ethics', 'Ethics'), ('other', 'Other')], max_length=20)),
                ('difficulty', models.IntegerField(choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Hard')], default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('current_question', models.IntegerField(default=0)),
                ('total_questions', models.IntegerField(default=0)),
                ('final_score', models.IntegerField(blank=True, null=True)),
                ('rationality_score', models.IntegerField(blank=True, null=True)),
                ('decisiveness_score', models.IntegerField(blank=True, null=True)),
                ('empathy_score', models.IntegerField(blank=True, null=True)),
                ('clarity_score', models.IntegerField(blank=True, null=True)),
                ('strengths', models.TextField(blank=True, null=True)),
                ('weaknesses', models.TextField(blank=True, null=True)),
                ('improvement_plan', models.TextField(blank=True, null=True)),
                ('resources', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dynamic_scenarios', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DynamicScenarioQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.dynamicscenario')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='DynamicScenarioAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rationality_score', models.IntegerField(blank=True, null=True)),
                ('decisiveness_score', models.IntegerField(blank=True, null=True)),
                ('empathy_score', models.IntegerField(blank=True, null=True)),
                ('clarity_score', models.IntegerField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='core.dynamicscenarioquestion')),
            ],
        ),
        migrations.DeleteModel(
            name='QuestionOption',
        ),
        migrations.DeleteModel(
            name='ScenarioQuestion',
        ),
        migrations.DeleteModel(
            name='ScenarioReport',
        ),
        migrations.DeleteModel(
            name='SequentialScenario',
        ),
        migrations.DeleteModel(
            name='UserQuestionResponse',
        ),
        migrations.DeleteModel(
            name='UserScenarioSession',
        ),
    ]
