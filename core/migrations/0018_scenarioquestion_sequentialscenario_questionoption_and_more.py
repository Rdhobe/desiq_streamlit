# Generated by Django 5.1.3 on 2025-05-10 13:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0017_profile_last_activity'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ScenarioQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('order', models.IntegerField(default=0, help_text='Order in which questions appear if linear')),
                ('is_starting_question', models.BooleanField(default=False, help_text='Whether this is the first question in the scenario')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SequentialScenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('career', 'Career Decisions'), ('finance', 'Financial Decisions'), ('relationships', 'Relationship Decisions'), ('time_management', 'Time Management'), ('education', 'Educational Decisions'), ('health', 'Health & Wellness'), ('ethics', 'Ethics'), ('other', 'Other')], max_length=20)),
                ('difficulty', models.IntegerField(choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Hard')], default=1)),
                ('xp_reward', models.IntegerField(default=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('unlocked_at_level', models.IntegerField(default=1, help_text='Minimum level required to unlock this scenario')),
                ('is_ai_generated', models.BooleanField(default=False)),
                ('max_questions', models.IntegerField(default=10, help_text='Maximum number of questions in this scenario')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_text', models.TextField()),
                ('rationality_points', models.IntegerField(default=0)),
                ('decisiveness_points', models.IntegerField(default=0)),
                ('empathy_points', models.IntegerField(default=0)),
                ('clarity_points', models.IntegerField(default=0)),
                ('next_question', models.ForeignKey(blank=True, help_text='Next question to show based on this option', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous_options', to='core.scenarioquestion')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='core.scenarioquestion')),
            ],
        ),
        migrations.AddField(
            model_name='scenarioquestion',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='core.sequentialscenario'),
        ),
        migrations.CreateModel(
            name='UserScenarioSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('rationality_score', models.IntegerField(default=0)),
                ('decisiveness_score', models.IntegerField(default=0)),
                ('empathy_score', models.IntegerField(default=0)),
                ('clarity_score', models.IntegerField(default=0)),
                ('question_path', models.JSONField(default=list, help_text='List of question IDs in the order they were answered')),
                ('current_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.scenarioquestion')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sequentialscenario')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenario_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='UserQuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.scenarioquestion')),
                ('selected_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.questionoption')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='core.userscenariosession')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ScenarioReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField()),
                ('strengths', models.TextField()),
                ('weaknesses', models.TextField()),
                ('suggestions', models.TextField()),
                ('overall_score', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='core.userscenariosession')),
            ],
        ),
    ]
